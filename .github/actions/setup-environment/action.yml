name: Setup Rails CI environment
description: Install optional system dependencies, configure Ruby, and install gems.
inputs:
  ruby-version:
    description: Ruby version to install.
    required: true
  bundler-cache:
    description: Whether to enable Bundler caching.
    required: false
    default: 'false'
  install-system-dependencies:
    description: Install system dependencies required by the Rails test suites.
    required: false
    default: 'false'
  bundle-install:
    description: Run "bundle install" after setting up Ruby.
    required: false
    default: 'true'
  bundle-working-directory:
    description: Directory in which to run "bundle install".
    required: false
    default: '.'
runs:
  using: composite
  steps:
    - if: ${{ inputs.install-system-dependencies == 'true' }}
      shell: bash
      run: |
        set -eo pipefail

        if command -v lsb_release >/dev/null 2>&1; then
          codename="$(lsb_release -cs)"
        elif [ -r /etc/os-release ]; then
          # shellcheck disable=SC1091
          . /etc/os-release
          codename="${VERSION_CODENAME:-${UBUNTU_CODENAME:-}}"
        else
          codename=""
        fi

        if [ -z "${codename}" ]; then
          echo "Unable to determine Debian codename" >&2
          exit 1
        fi

        if ! command -v gpg >/dev/null 2>&1 || ! command -v curl >/dev/null 2>&1; then
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends curl gnupg
        fi

        sudo install -d -m 0755 /etc/apt/keyrings

        curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | \
          sudo gpg --dearmor -o /etc/apt/keyrings/postgresql.gpg
        echo "deb [signed-by=/etc/apt/keyrings/postgresql.gpg] http://apt.postgresql.org/pub/repos/apt/ ${codename}-pgdg main" | \
          sudo tee /etc/apt/sources.list.d/pgdg.list >/dev/null

        curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | \
          sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
        echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_18.x nodistro main" | \
          sudo tee /etc/apt/sources.list.d/nodesource.list >/dev/null

        curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | \
          sudo gpg --dearmor -o /etc/apt/keyrings/yarn.gpg
        echo "deb [signed-by=/etc/apt/keyrings/yarn.gpg] http://dl.yarnpkg.com/debian/ stable main" | \
          sudo tee /etc/apt/sources.list.d/yarn.list >/dev/null

        sudo apt-get update

        build_deps=(
          autoconf
          automake
          bzip2
          dpkg-dev
          file
          g++
          gcc
          imagemagick
          libbz2-dev
          libc6-dev
          libcurl4-openssl-dev
          libdb-dev
          libevent-dev
          libffi-dev
          libgdbm-dev
          libgeoip-dev
          libglib2.0-dev
          libjpeg-dev
          libkrb5-dev
          liblzma-dev
          libmagickcore-dev
          libmagickwand-dev
          libncurses5-dev
          libncursesw5-dev
          libpng-dev
          libpq-dev
          libreadline-dev
          libsqlite3-dev
          libssl-dev
          libtool
          libvips
          libvips-dev
          libwebp-dev
          libxml2-dev
          libxslt-dev
          libyaml-dev
          make
          patch
          unzip
          xz-utils
          zlib1g-dev
        )

        if apt-cache show default-libmysqlclient-dev 2>/dev/null | grep -q '^Version:'; then
          build_deps+=(default-libmysqlclient-dev)
        else
          build_deps+=(libmysqlclient-dev)
        fi

        if apt-cache show tzdata-legacy 2>/dev/null | grep -q '^Version:'; then
          build_deps+=(tzdata-legacy)
        fi

        app_deps=(
          postgresql-client
          default-mysql-client
          sqlite3
          git
          nodejs=18.19.0-1nodesource1
          yarn
          lsof
          ffmpeg
          mupdf
          mupdf-tools
          poppler-utils
        )

        sudo apt-get install -y --no-install-recommends "${build_deps[@]}" "${app_deps[@]}"

        sudo apt-get clean
        sudo rm -rf /var/lib/apt/lists/* /tmp/*
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ inputs.ruby-version }}
        bundler-cache: ${{ inputs.bundler-cache }}
    - if: ${{ inputs.bundle-install != 'false' }}
      shell: bash
      working-directory: ${{ inputs.bundle-working-directory }}
      run: bundle install --jobs 4 --retry 3
