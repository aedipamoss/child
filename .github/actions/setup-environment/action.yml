name: Setup Rails CI environment
description: Install optional system dependencies, configure Ruby, and install gems.
inputs:
  ruby-version:
    description: Ruby version to install.
    required: true
  bundler-cache:
    description: Whether to enable Bundler caching.
    required: false
    default: 'true'
  bundle-install:
    description: Run "bundle install" after setting up Ruby.
    required: false
    default: 'true'
  branch-name:
    description: Branch name to use for cache key.
    required: false
    default: 'main'
runs:
  using: composite
  steps:
    - name: Cache bundle
      id: bundle-cache
      if: ${{ inputs.bundler-cache == 'true' && github.event_name != 'pull_request' }}
      uses: actions/cache@v4
      with:
        path: /usr/local/bundle
        key: bundle-${{ runner.os }}-${{ inputs.ruby-version }}-${{ inputs.branch-name }}-${{ hashFiles('Gemfile.lock') }}
        restore-keys: |
          bundle-${{ runner.os }}-${{ inputs.ruby-version }}-${{ inputs.branch-name }}-
          bundle-${{ runner.os }}-${{ inputs.ruby-version }}-
    - name: Install Bundler and gems
      if: ${{ inputs.bundle-install == 'true' }}
      shell: bash
      run: |
        echo "::group::bundle install"
        set -eo pipefail
        bundle install --jobs 4 --retry 3
        echo "::endgroup::"
    - name: bundle env
      shell: bash
      run: |
        echo "::group::bundle env"
        bundle env
        echo "::endgroup::"
